@page "/AddProduct"
@using Model
@using Practical.DataBase
@rendermode InteractiveServer
@inject ModelContext ef
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager

@if (msg != null)
{
<div class="error-message">
    @msg
</div>
Timer();
}
<div class="background-N1">
    <div class="add-product-container">
        <div class="add-product">
            <h5>Имя продукта</h5>
            <input type="text" @bind="_product.ProductName"/>
            <h5>Артикль (номер модели)</h5>
            <input type="text" @bind="_product.PartNumber"/>
        </div>
        <div class="add-product">
            <h5>Количество на складе</h5>
            <input type="text" @bind="_product.QuantityInStock"/>
            <h5>Минимальное количество</h5>
            <input type="text" @bind="_product.MinimumStockLevel"/>
        </div>
        <div class="add-product">
            <h5>Цена продажи</h5>
            <input type="text" @bind="_product.SalePrice"/>
            <h5>Цена закупки</h5>
            <input type="text" @bind="_product.PurchasePrice"/>
        </div>
        <div class="add-product">
            <h5>Описание</h5>
            <textarea @bind="_product.ProductDescription"></textarea>
        </div>
        <div class="add-product">
            <h5>Путь к изображению</h5>
            <img src="@_product.Image"/>
            <input type="text" @bind="_product.Image"/>
        </div>
        <div class="add-product">
            <h5>Поставщик</h5>
            <select class="add-product-select" @bind="_product.SupplierId">
                @foreach (var _supp in _suppliers)
                {
                    <option value="@_supp.Id">@_supp.Name</option>
                }
            </select>
        </div>
    </div>
    <button @onclick="SaveNewChanges">Создать продукт</button>
</div>

@code {
    private Product _product = new Product();
    private int productId;
    private List<Supplier> _suppliers = new List<Supplier>();
    private string? msg;

    protected override void OnInitialized()
    {
       _suppliers = ef.Suppliers.ToList();
       _product.SupplierId = 1;
       _product.Image = "notfound";
    }
    private void Timer()
    {  Task.Delay(10000); msg = null; StateHasChanged(); }
    
    protected void SaveNewChanges()
    {
        ef.Add(_product);
        ef.SaveChanges();
        msg = "Продукт создан";
        Timer();
        productId = _product.Id;
        NavigationManager.NavigateTo($"/ProductDemo/{productId}");
    }
}